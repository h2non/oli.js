{
  // parsing options
  var includeLOC = options.loc;
  var includeComments = options.comments;

  var comments = includeComments ? [] : null;

  function loc() {
    var start = offset();
    var end = start + text().length;

    var loc = {
      line: line(),
      column: column(),
      start: start,
      end: end
    };

    if (options.filename) {
      loc.filename = options.filename
    }

    return loc;
  }

  function astNode(node) {
    if (includeLOC) {
      node.loc = loc();
    }
    return node;
  }

  function registerComment(node) {
    var exists = false
    for (var i = 0, l = comments.length; i < l; i += 1) {
      if (JSON.stringify(node) === JSON.stringify(comments[i])) {
        exists = true
        break
      }
    }
    if (!exists) {
      comments.push(node)
    }
  }
}

start
  = __ program:Program __ { return program; }

Program
  = body:SourceElements? {
      var program = {
        type:     "Program",
        body:     body !== null ? body : []
      };
      if (includeComments) {
        program.comments = comments;
      }
      return program;
    }

SourceElements
  = DuobleDashOperator __ elements:SourceElements {
    return [ astNode({
      type:     'ListExpression',
      elements: elements
    }) ];
  }
  / head:Statement tail:(__ Statement)* {
      var result = [ head ];
      for (var i = 0, l = tail.length; i < l; i += 1) {
        result.push(tail[i][1]);
      }
      return result;
    }
