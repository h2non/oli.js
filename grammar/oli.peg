{
  //var indentStack = [];
  //var indent = "";

  function loc() {
    var start = offset();
    var end = start + text().length;

    var loc = {
      line: line(),
      column: column(),
      start: start,
      end: end
    };

    if (options.filename) {
      loc.filename = options.filename
    }

    return loc;
  }

  function astNode(tree) {
    var node = { loc: loc() };

    for (var k in tree) {
      if (tree.hasOwnProperty(k) && tree[k] != null) {
        node[k] = tree[k];
      }
    }

    return node;
  }
}

start
  = __ program:Program __ { return program; }

Program
  = body:SourceElements? {
      return {
        type:     "Program",
        body:     body !== null ? body : []
      };
    }

SourceElements
  = head:(Statement / PrimitiveValueExpression / UnquotedStringLiteral)
    tail:(__ (Statement / PrimitiveValueExpression / UnquotedStringLiteral))* {
      var result = [ head ];
      for (var i = 0, l = tail.length; i < l; i += 1) {
        result.push(tail[i][1]);
      }
      return result;
    }
